#+TITLE:
#+FILETAGS: :TOC:

* Table of Contents :TOC:
- [[#arch-installation][Arch installation]]
  - [[#initial-install][Initial install]]
  - [[#post-install][Post-install]]
- [[#emacs][Emacs]]
  - [[#personal-config-repo][Personal config repo]]
  - [[#install-required-packages][Install required packages]]
  - [[#doom-installation][Doom installation]]
- [[#windowing-environment][Windowing Environment]]
  - [[#install-required-packages-1][Install required packages]]
  - [[#river-configuration][River Configuration]]
  - [[#waybar-configuration][Waybar Configuration]]
  - [[#rofi-themes-applets--menus--launcher][Rofi themes (applets / menus / launcher)]]
  - [[#bemenu-configuration][bemenu Configuration]]
- [[#latex-environment][Latex environment]]
- [[#keyboard-related][Keyboard-related]]
  - [[#pog-appimage][Pog Appimage]]
  - [[#vial-appimage][Vial Appimage]]
  - [[#qmk-repo][QMK repo]]
  - [[#personal-kb-repo][Personal KB repo]]

* Arch installation
** Initial install

*** Get an Arch ISO

https://archlinux.org/download/

*** Archinstall: guided installation

https://archinstall.archlinux.page/installing/guided.html


Ideally, the configuration is already saved and stored on a network-accessible
server. The following command loads a previously defined configuration and runs
the installer using those settings.

#+begin_src
archinstall --config https://domain.lan/config.json
#+end_src


*** Disk partitioning


*** Basic desktop environment

** Post-install
*** Fonts
**** Microsoft fonts

There are a few MS font packages in the AUR:

/ttf-ms-fonts ttf-vista-fonts ttf-ms-win11 ttf-ms-win10-cdn/

I choose /ttf-ms-win11/ and for Repository AUR: 2) ttf-ms-win11-auto

#+begin_src shell

paru -S ttf-ms-win11

#+end_src

**** Apple fonts
#+begin_src shell

paru -S apple-fonts ttf-mac-fonts nerd-fonts-sf-mono ttf-apple-fontpack nerd-fonts-sf-mono

#+end_src

**** Programming fonts (incl. Nerd fonts)
Fira Code Nerd (Fura)

*** Extra packages
Use a custom package to install extra software and have the packaging system
figure out the dependencies for these.

#+begin_src
paru -S plus42 thunar inkscape

#+end_src

*** Printing
#+begin_src shell
paru -S

#+end_src

* Emacs
** Personal config repo
#+begin_src shell

#+end_src

** Install required packages

Since both the main environment (River) and the fallback (Gnome) are both going
to use Wayland, I install the Wayland version of emacs. The regular package
(/emacs/) works well under Wayland, except for org-capture. For some reason,
capture window doesn't work.  Using the /emacs-wayland/ fixes this issue.

#+begin_src shell
paru -S emacs-wayland
#+end_src

The minimum requirements for a vanilla install are as follows:

#+begin_src shell
paru -S fd extra/ripgrep
#+end_src

The full list of required packages is:

#+begin_src shell
paru -S
#+end_src

** Doom installation

The main repository is: https://github.com/doomemacs/doomemacs

Since the configuration already exists after cloning the config repo above, the
installation steps below will take into account this configuration and only
download the packages required.

#+begin_src shell

git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs

~/.config/emacs/bin/doom install

#+end_src

* Windowing Environment
** Install required packages
#+begin_src
paru -S river-git \
wlroots-git \
foot \
bemenu \
wdisplay

#+end_src

** River Configuration
#+begin_src

#+end_src

** Waybar Configuration
#+begin_src

#+end_src

** Rofi themes (applets / menus / launcher)
These are simple, stylish menus to supplement the River wm.
Repo: https://github.com/dctxmei/rofi-themes

Arch packages required
#+begin_src shell

#+end_src

Configuration
#+begin_src

#+end_src

** bemenu Configuration
#+begin_src

#+end_src

* Latex environment

Arch packages Latex Live using a group: /texlive/

Documentation here: https://wiki.archlinux.org/title/TeX_Live

Note: There are two alternatives for installation: Native and Arch-packaged

* Keyboard-related
** Pog Appimage

** Vial Appimage

** QMK repo

** Personal KB repo
